tmps_env __init__
(60.0, 110.0)
(200.0, 140.0)
(60.0, 240.0)
(210.0, 220.0)
add_agent
add_agent
add_agent
add_agent
render_data shape (600, 300, 3)
render_data shape2 (600, 300, 3)
{'num_agents': 4, 'obs_box_size': 50, 'init_pos': ((60.0, 110.0), (200.0, 140.0), (60.0, 240.0), (210.0, 220.0)), 'dynamic_delta_t': 0.01, 'map_width': 300, 'map_height': 300, 'geo_grid_data': <envs.bases.geo_base.GeoGridData object at 0x7fdae531f0d0>, 'agents': [<envs.bases.agent_base.AgentInterface object at 0x7fdae530cca0>, <envs.bases.agent_base.AgentInterface object at 0x7fdae53338b0>, <envs.bases.agent_base.AgentInterface object at 0x7fdae5314ee0>, <envs.bases.agent_base.AgentInterface object at 0x7fdae530c160>], 'enemies': [<envs.bases.scenario_base.EnemyInterface object at 0x7fdae530c6a0>, <envs.bases.scenario_base.EnemyInterface object at 0x7fdae530cc10>, <envs.bases.scenario_base.EnemyInterface object at 0x7fdae533a310>, <envs.bases.scenario_base.EnemyInterface object at 0x7fdae537ae20>]}
=============================
=1 Env simple_adversary is right ...
=============================
=2 The 4 agents are inited ...
=============================
=3 starting iterations ...
=============================
steps:0 episode:0
/home/jonghae/ai_crew_project/MADDPG/model.py:116: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /opt/conda/conda-bld/pytorch_1695392022560/work/torch/csrc/utils/tensor_new.cpp:261.)
  self.amplitude = torch.tensor([(self.action_space[0].high - self.action_space[0].low) / 2.0, (self.action_space[1].high - self.action_space[1].low) / 2.0], device=args.device ,dtype=torch.float32)
Traceback (most recent call last):
  File "/home/jonghae/ai_crew_project/MADDPG/main_openai.py", line 340, in <module>
    train(arglist, video)
  File "/home/jonghae/ai_crew_project/MADDPG/main_openai.py", line 233, in train
    action_n = [agent(torch.from_numpy(obs).to(arglist.device, torch.float)).detach().cpu().numpy() \
  File "/home/jonghae/ai_crew_project/MADDPG/main_openai.py", line 233, in <listcomp>
    action_n = [agent(torch.from_numpy(obs).to(arglist.device, torch.float)).detach().cpu().numpy() \
  File "/home/jonghae/anaconda3/envs/aicrew/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/jonghae/anaconda3/envs/aicrew/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/jonghae/ai_crew_project/MADDPG/model.py", line 134, in forward
    x = self.LReLU(self.linear_a1(input))
  File "/home/jonghae/anaconda3/envs/aicrew/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/jonghae/anaconda3/envs/aicrew/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/jonghae/anaconda3/envs/aicrew/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (1x4 and 2x64)